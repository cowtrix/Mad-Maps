#include "TerrainFunctions.compute"
#pragma kernel BlendInts

RWStructuredBuffer<int> _Base;
float2 _BaseSize;

StructuredBuffer<int> _Blend;
float2 _BlendSize;

StructuredBuffer<float> _Stencil;
float2 _StencilSize;

int _BlendMode;
float4 _MinMax;

[numthreads(1,1,1)]
void BlendInts (uint3 id : SV_DispatchThreadID)
{
	int index = id.x + id.y * _BaseSize.x;
	float base = _Base[index]; 

	float ux = id.x / _BaseSize.x;
	float uy = id.y / _BaseSize.y;

	//float blend = BilinearSample(_Blend, _BlendSize.x, _BlendSize.y, ux, uy);
	float blend = _Blend[index];
	float stencilVal = StencilBilinearSample(_Stencil, _StencilSize.x, _StencilSize.y, ux, uy);

	float stencil = 0;
	int key = 0;
	DecompressStencil(stencilVal, key, stencil);

	if(_BlendMode == 0)			// Additive
	{
		_Base[index] = base + blend;		
	}
	else if(_BlendMode == 1)	// Set
	{
		_Base[index] = blend;
	}
	else if(_BlendMode == 2)	// Stencil;
	{
		_Base[index] = lerp(base, blend, stencil);
	}
}
